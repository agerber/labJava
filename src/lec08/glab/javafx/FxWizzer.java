/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lec08.glab.javafx;

import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author ag
 */
public class FxWizzer extends javax.swing.JFrame {

    private String strPath;
    private String strPathDots;

    private final String strCSS
            = ".mainFxmlClass {\n"
            + "\n"
            + "}";

    private final String strMAIN = "import java.io.IOException;\n"
            + "import javafx.application.Application;\n"
            + "import javafx.fxml.FXMLLoader;\n"
            + "import javafx.scene.Parent;\n"
            + "import javafx.scene.Scene;\n"
            + "import javafx.stage.Stage;\n"
            + "\n"
            + "public class %sMain extends Application {\n"
            + "\n"
            + "    @Override\n"
            + "    public void start(Stage stage) throws IOException {\n"
            + "        Parent root = FXMLLoader.load(getClass().getResource(\"/fxml/%s.fxml\"));\n"
            + "\n"
            + "        Scene scene = new Scene(root);\n"
            + "        scene.getStylesheets().add(\"/styles/%s.css\");\n"
            + "\n"
            + "        stage.setTitle(\"%s\");\n"
            + "        stage.setScene(scene);\n"
            + "        stage.show();\n"
            + "    }\n"
            + "\n"
            + "\n"
            + "    public static void main(String[] args) {\n"
            + "        launch(args);\n"
            + "    }\n"
            + "\n"
            + "\n"
            + "}";

    private final String strCONTROLLER = "import java.net.URL;\n"
            + "import java.util.ResourceBundle;\n"
            + "import javafx.fxml.Initializable;\n"
            + "\n"
            + "\n"
            + "\n"
            + "\n"
            + "public class %sController implements Initializable {\n"
            + "\n"
            + "    @Override\n"
            + "    public void initialize(URL url, ResourceBundle resourceBundle) {\n"
            + "        \n"
            + "    }\n"
            + "}";

    private final String strFXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
            + "<?import java.net.*?>\n"
            + "<?import javafx.scene.layout.*?>\n"
            + "\n"
            + "<AnchorPane id=\"AnchorPane\" prefHeight=\"400.0\" prefWidth=\"600.0\" styleClass=\"mainFxmlClass\" xmlns:fx=\"http://javafx.com/fxml/1\" xmlns=\"http://javafx.com/javafx/8\" fx:controller=\"edu.uchicago.gerber.%sController\">\n"
            + "    <stylesheets>\n"
            + "        <URL value=\"@/styles/%s.css\" />\n"
            + "    </stylesheets>\n"
            + "   \n"
            + "</AnchorPane>";

    private final String strGIT = "/target/\n";


    public FxWizzer() {
        initComponents();
        myInit();
    }

    private void myInit() {
        //check all radion buttons by default
        chkMain.setSelected(true);
        chkController.setSelected(true);
        chkFxml.setSelected(true);
        chkCss.setSelected(true);
        chkGitignore.setSelected(true);

        this.setTitle("JavaFx code generator V1.0");
        strPath = getPathEnd(this.getClass());
        strPathDots = getPathDots(this.getClass());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        bgpNode = new javax.swing.ButtonGroup();
        bgpCode = new javax.swing.ButtonGroup();
        jCheckBox3 = new javax.swing.JCheckBox();
        btnGenerate = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        chkMain = new javax.swing.JCheckBox();
        chkController = new javax.swing.JCheckBox();
        chkFxml = new javax.swing.JCheckBox();
        chkCss = new javax.swing.JCheckBox();
        chkGitignore = new javax.swing.JCheckBox();
        txtMain = new javax.swing.JTextField();
        txtController = new javax.swing.JTextField();
        txtFxml = new javax.swing.JTextField();
        txtCss = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnGit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaMaven = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        btnArch = new javax.swing.JButton();

        jCheckBox3.setText("jCheckBox3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGenerate.setText("Generate Region files");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        lblName.setText("Base Name:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("JavaFx Wizard");

        chkMain.setText("Main");

        chkController.setText("Controller");
        chkController.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkControllerActionPerformed(evt);
            }
        });

        chkFxml.setText("Fxml");

        chkCss.setText("css");

        chkGitignore.setText(".gitignore");
        chkGitignore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGitignoreActionPerformed(evt);
            }
        });

        txtMain.setText("/src/main/java/");
        txtMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMainActionPerformed(evt);
            }
        });

        txtController.setText("/src/main/java/");

        txtFxml.setText("/src/main/resources/fxml/");

        txtCss.setText("/src/main/resources/styles/");

        jLabel2.setText("+ package");

        jLabel3.setText("+ package");

        btnGit.setText("Generate .gitignore only");
        btnGit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGitActionPerformed(evt);
            }
        });

        txaMaven.setColumns(20);
        txaMaven.setRows(5);
        jScrollPane1.setViewportView(txaMaven);

        jLabel4.setText("maven code:");

        btnArch.setText("Copy archetype code to clipboard");
        btnArch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(lblName)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(txtName))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(155, 155, 155)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(txtFxml, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(txtCss, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                                        .addComponent(txtController, javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                        .addComponent(txtMain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                        .addComponent(jLabel2)
                                                                                                        .addComponent(jLabel3))
                                                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel4)
                                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(chkCss)
                                                                        .addComponent(chkMain)
                                                                        .addComponent(chkController)
                                                                        .addComponent(chkFxml)
                                                                        .addComponent(chkGitignore))))
                                                .addGap(17, 17, 17))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnGit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnGenerate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnArch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                                                .addContainerGap())))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblName)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(chkMain)
                                                        .addComponent(txtMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(chkController)
                                                        .addComponent(txtController, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(chkFxml))
                                        .addComponent(txtFxml, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(chkCss)
                                        .addComponent(txtCss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkGitignore)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnGit)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnArch))
                                        .addComponent(jScrollPane1)))
        );

        jLabel1.getAccessibleContext().setAccessibleName("JavaFx Wizard");

        pack();
    }// </editor-fold>                        

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void chkControllerActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        //mvn exec:java -Dexec.mainClass="edu.uchicago.gerber.PdfMain"
        if (txtName.getText().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "The 'Base Name' field must not be empty");
            return;
        }

        //write main
        if (chkMain.isSelected()) {
            writeFile(txtName.getText() + "Main", txtMain.getText() + strPath, String.format(strMAIN, txtName.getText(), txtName.getText(), txtName.getText(), txtName.getText()), true, ".java");
        }
        //write controller
        if (chkController.isSelected()) {
            writeFile(txtName.getText() + "Controller", txtController.getText() + strPath, String.format(strCONTROLLER, txtName.getText()), true, ".java");
        }
        //write fxml
        if (chkFxml.isSelected()) {
            writeFile(txtName.getText(), txtFxml.getText(), String.format(strFXML, txtName.getText(), txtName.getText()), false, ".fxml");
        }
        //write css
        if (chkCss.isSelected()) {
            writeFile(txtName.getText(), txtCss.getText(), strCSS, false, ".css");
        }

        //write git
        if (chkGitignore.isSelected()) {
            writeGit(strGIT);
        }


        txaMaven.setText("mvn clean package exec:java -Dexec.mainClass=\"" + strPathDots + "." + txtName.getText() + "Main\"\n"
                + "mvn exec:java -Dexec.mainClass=\"" + strPathDots + "." + txtName.getText() + "Main\""
        );

//        clean package exec:java -Dexec.mainClass="edu.uchicago.gerber.PdfMain"
//
//exec:java -Dexec.mainClass="edu.uchicago.gerber.PdfMain"

    }

    private void chkGitignoreActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void txtMainActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnGitActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        writeGit(strGIT);
    }

    private void btnArchActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String strLocal = "mvn archetype:generate -DarchetypeGroupId=com.zenjava -DarchetypeArtifactId=javafx-basic-archetype -DarchetypeVersion=1.1";
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection stringSelection = new StringSelection(strLocal);
        clpbrd.setContents(stringSelection, null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FxWizzer().setVisible(true);
            }
        });
    }

    private String getPathEnd(Class clazz) {
        return clazz.getPackage().toString().replace("package", "").trim().replace(".", "/") + "/";
    }

    private String getPathDots(Class clazz) {
        return clazz.getPackage().toString().replace("package", "").trim();
    }

    private void writeFile(String strFileBase, String strFullPath, String strData, boolean bAddPackageStatement, String strExt) {
        PrintWriter writer = null;
        //  String path = getClass().getClassLoader().getResource(".").getPath();

        String projectPath = System.getProperty("user.dir") + strFullPath;

        try {

            writer = new PrintWriter(projectPath + strFileBase + strExt, "UTF-8");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (bAddPackageStatement) {
            writer.println("package " + strPathDots + ";");
        }

        writer.println(strData);

        writer.close();
    }

    private void writeGit(String strData) {
        PrintWriter writer = null;
        //  String path = getClass().getClassLoader().getResource(".").getPath();

        String projectPath = System.getProperty("user.dir");

        try {

            writer = new PrintWriter(projectPath + "/.gitignore", "UTF-8");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FxWizzer.class.getName()).log(Level.SEVERE, null, ex);
        }

        writer.println(strData);

        writer.close();
    }

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup bgpCode;
    private javax.swing.ButtonGroup bgpNode;
    private javax.swing.JButton btnArch;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnGit;
    private javax.swing.JCheckBox chkController;
    private javax.swing.JCheckBox chkCss;
    private javax.swing.JCheckBox chkFxml;
    private javax.swing.JCheckBox chkGitignore;
    private javax.swing.JCheckBox chkMain;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextArea txaMaven;
    private javax.swing.JTextField txtController;
    private javax.swing.JTextField txtCss;
    private javax.swing.JTextField txtFxml;
    private javax.swing.JTextField txtMain;
    private javax.swing.JTextField txtName;
    // End of variables declaration                   
}
